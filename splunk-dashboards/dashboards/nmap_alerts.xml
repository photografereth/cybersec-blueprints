<dashboard>
  <label>Nmap Security Scan</label>
  <description>Análise completa dos resultados de varreduras Nmap com detecção de vulnerabilidades</description>
  
  <row>
    <panel>
      <title>Status Geral de Segurança</title>
      <single>
        <search>
          <![CDATA[
            index=nmap sourcetype="json_scan"
            | spath input=host.@addr output=ip
            | mvexpand ports=ports.port
            | spath input=ports.portid output=port
            | spath input=ports.state output=state
            | spath input=ports.critical output=critical
            | where state="open" AND critical="true"
            | stats count
          ]]>
        </search>
        <option name="drilldown">none</option>
        <option name="colorBy">value</option>
        <option name="rangeColors">["0x53a051","0xf8be34","0xf1813f","0xdc4e41"]</option>
        <option name="rangeValues">[0,5,15]</option>
        <option name="useColors">true</option>
        <option name="unit">portas críticas</option>
      </single>
    </panel>
    
    <panel>
      <title>Hosts Vulneráveis</title>
      <single>
        <search>
          <![CDATA[
            index=nmap sourcetype="json_scan"
            | spath input=host.@addr output=ip
            | mvexpand ports=ports.port
            | spath input=ports.portid output=port
            | spath input=ports.state output=state
            | spath input=ports.critical output=critical
            | where state="open" AND critical="true"
            | stats dc(ip) as host_count
          ]]>
        </search>
        <option name="drilldown">none</option>
        <option name="colorBy">value</option>
        <option name="rangeColors">["0x53a051","0xf8be34","0xf1813f","0xdc4e41"]</option>
        <option name="rangeValues">[0,3,8]</option>
        <option name="useColors">true</option>
        <option name="unit">hosts</option>
      </single>
    </panel>
    
    <panel>
      <title>Serviços Expostos</title>
      <single>
        <search>
          <![CDATA[
            index=nmap sourcetype="json_scan"
            | spath input=host.@addr output=ip
            | mvexpand ports=ports.port
            | spath input=ports.portid output=port
            | spath input=ports.state output=state
            | spath input=ports.service output=service
            | where state="open" 
            | stats dc(service) as service_count
          ]]>
        </search>
        <option name="drilldown">none</option>
        <option name="colorBy">value</option>
        <option name="rangeColors">["0x53a051","0xf8be34","0xf1813f","0xdc4e41"]</option>
        <option name="rangeValues">[0,5,10]</option>
        <option name="useColors">true</option>
        <option name="unit">serviços</option>
      </single>
    </panel>
  </row>
  
  <row>
    <panel>
      <title>Mapa de Hosts com Portas Críticas Abertas</title>
      <map>
        <search>
          <![CDATA[
            index=nmap sourcetype="json_scan"
            | spath input=host.@addr output=ip
            | mvexpand ports=ports.port
            | spath input=ports.portid output=port
            | spath input=ports.state output=state
            | spath input=ports.critical output=critical
            | where state="open" AND critical="true"
            | stats count by ip
            | iplocation ip
            | geom geo_countries featureIdField=Country
          ]]>
        </search>
        <option name="mapping.type">marker</option>
        <option name="mapping.markerLayer.markerOpacity">0.8</option>
        <option name="mapping.markerLayer.markerMinSize">10</option>
        <option name="mapping.markerLayer.markerMaxSize">50</option>
      </map>
    </panel>
  </row>
  
  <row>
    <panel>
      <title>Hosts com Portas Críticas Abertas</title>
      <chart>
        <search>
          <![CDATA[
            index=nmap sourcetype="json_scan"
            | spath input=host.@addr output=ip
            | spath input=host.hostname output=hostname
            | mvexpand ports=ports.port
            | spath input=ports.portid output=port
            | spath input=ports.state output=state
            | spath input=ports.service output=service
            | where state="open" AND port IN ("21","22","23","25","53","80","111","135","139","143","443","445","993","995","1433","1723","3306","3389","5432","5900","8080")
            | eval port_service=port + "/" + service
            | stats count by ip, port_service
            | sort - count
          ]]>
        </search>
        <option name="charting.chart">bubble</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.showDataLabels">all</option>
      </chart>
    </panel>
  </row>
  
  <row>
    <panel>
      <title>Timeline de Aberturas Críticas</title>
      <chart>
        <search>
          <![CDATA[
            index=nmap sourcetype="json_scan"
            | spath input=host.@addr output=ip
            | mvexpand ports=ports.port
            | spath input=ports.portid output=port
            | spath input=ports.state output=state
            | spath input=ports.service output=service
            | where state="open" AND port IN ("21","22","23","25","53","80","111","135","139","143","443","445","993","995","1433","1723","3306","3389","5432","5900","8080")
            | timechart span=1h count by service
          ]]>
        </search>
        <option name="charting.chart">area</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.legend.placement">bottom</option>
      </chart>
    </panel>
  </row>
  
  <row>
    <panel>
      <title>Lista de Hosts mais Vulneráveis</title>
      <table>
        <search>
          <![CDATA[
            index=nmap sourcetype="json_scan"
            | spath input=host.@addr output=ip
            | spath input=host.hostname output=hostname
            | spath input=host.os.name output=os
            | mvexpand ports=ports.port
            | spath input=ports.portid output=port
            | spath input=ports.state output=state
            | spath input=ports.critical output=critical
            | where state="open" AND critical="true"
            | stats count as critical_ports, values(port) as open_ports by ip, hostname, os
            | sort -critical_ports
            | rename ip as "Endereço IP", hostname as "Nome do Host", os as "Sistema Operacional", 
                    critical_ports as "Portas Críticas", open_ports as "Lista de Portas"
          ]]>
        </search>
      </table>
    </panel>
  </row>
  
  <row>
    <panel>
      <title>Detalhes de Portas/Serviços por Host</title>
      <table>
        <search>
          <![CDATA[
            index=nmap sourcetype="json_scan"
            | spath input=host.@addr output=ip
            | spath input=host.hostname output=hostname
            | mvexpand ports=ports.port
            | spath input=ports.portid output=port
            | spath input=ports.state output=state
            | spath input=ports.service output=service
            | spath input=ports.version output=version
            | spath input=ports.critical output=critical
            | where state="open"
            | eval severity=case(critical="true", "Alta", 1=1, "Normal")
            | table _time, ip, hostname, port, service, version, severity
            | sort ip, port
            | rename ip as "Endereço IP", hostname as "Nome do Host", port as "Porta", 
                    service as "Serviço", version as "Versão", severity as "Severidade"
          ]]>
        </search>
        <option name="drilldown">row</option>
      </table>
    </panel>
  </row>
  
  <row>
    <panel>
      <title>Comparação com Linha de Base</title>
      <chart>
        <search>
          <![CDATA[
            index=nmap sourcetype="json_scan"
            | spath input=host.@addr output=ip
            | mvexpand ports=ports.port
            | spath input=ports.portid output=port
            | spath input=ports.state output=state
            | stats count(eval(state="open")) as current_open by port
            | appendcols 
                [| search index=nmap sourcetype="json_scan" earliest=-30d@d latest=-1d@d
                | spath input=host.@addr output=ip
                | mvexpand ports=ports.port
                | spath input=ports.portid output=port
                | spath input=ports.state output=state
                | stats count(eval(state="open")) as baseline_open by port]
            | eval difference=current_open-baseline_open
            | sort -difference
            | head 10
          ]]>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.chart.overlayFields">baseline_open</option>
      </chart>
    </panel>
  </row>
  
  <row>
    <panel>
      <title>Estatísticas de Vulnerabilidades por Serviço</title>
      <chart>
        <search>
          <![CDATA[
            index=nmap sourcetype="json_scan"
            | spath input=host.@addr output=ip
            | mvexpand ports=ports.port
            | spath input=ports.portid output=port
            | spath input=ports.state output=state
            | spath input=ports.service output=service
            | spath input=ports.critical output=critical
            | where state="open"
            | stats count as instances, count(eval(critical="true")) as critical_instances by service
            | eval percent_critical=round((critical_instances/instances)*100,1)
            | sort -percent_critical
            | fields service, percent_critical
          ]]>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.chart.showPercent">true</option>
      </chart>
    </panel>
    
    <panel>
      <title>Top Hosts com mais Portas Abertas</title>
      <chart>
        <search>
          <![CDATA[
            index=nmap sourcetype="json_scan"
            | spath input=host.@addr output=ip
            | spath input=host.hostname output=hostname
            | mvexpand ports=ports.port
            | spath input=ports.portid output=port
            | spath input=ports.state output=state
            | where state="open"
            | stats count as open_ports by ip
            | sort -open_ports
            | head 10
          ]]>
        </search>
        <option name="charting.chart">bar</option>
        <option name="charting.chart.showDataLabels">all</option>
      </chart>
    </panel>
  </row>
</dashboard>